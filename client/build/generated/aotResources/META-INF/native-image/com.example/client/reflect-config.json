[
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "clientConnectorCustomizer",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ClientHttpConnector"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxChunkSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxChunkSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": [ ]
      },
      {
        "name": "errorWebExceptionHandler",
        "parameterTypes": [
          "org.springframework.boot.web.reactive.error.ErrorAttributes",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RemoveJsonAttributesResponseBodyGatewayFilterFactory$FieldListConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.environment.EnvironmentManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RedirectToGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.server.i18n.LocaleContextResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": [ ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getBasedir",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteip",
        "parameterTypes": [ ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "setRejectIllegalHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isRejectIllegalHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.graphql.execution.GraphQlSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.BetweenRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.support.AbstractConfigurable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.CacheRequestBodyGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Rsocket",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForCharSequence",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.headers.TransferEncodingNormalizationHeadersFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.ReadBodyRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AddRequestHeadersIfNotPresentGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.scope.refresh.RefreshScope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AddResponseHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.HostRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.headers.GRPCResponseHeadersFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.server.WebExceptionHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForBigInteger",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.rewrite.GzipMessageBodyResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AbstractNameValueGatewayFilterFactory$NameValueConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nettyWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$Proxy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNonProxyHostsPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "reactor.netty.transport.ProxyProvider$Proxy"
        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getNonProxyHostsPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactorResourceFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getDir",
        "parameterTypes": [ ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.GraphQlCorsProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedOriginPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAllowedMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedOrigins",
        "parameterTypes": [ ]
      },
      {
        "name": "setExposedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAllowedOriginPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAllowedMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowedOrigins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAllowedHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowCredentials",
        "parameterTypes": [ ]
      },
      {
        "name": "getExposedHeaders",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.DefaultServiceInstance",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "setInstanceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getServiceId",
        "parameterTypes": [ ]
      },
      {
        "name": "setServiceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMetadata",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstanceId",
        "parameterTypes": [ ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "isSecure",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.QueryRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.MethodRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.WeightCalculatorWebFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "webClientBuilder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
        ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.RemoveCachedBodyFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.AbstractRoutePredicateFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegisterManagement",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isRegisterManagement",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setFailFast",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isFailFast",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.RemoteAddrRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultCodecCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.codec.CodecProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.StripPrefixGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForByte",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtils",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.example.client.ClientApplication__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "com.example.client.ClientApplication"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.route.RouteRefreshListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getCoreSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.CloudFoundryRouteServiceRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.rewrite.ModifyRequestBodyGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getWorker",
        "parameterTypes": [ ]
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getIo",
        "parameterTypes": [ ]
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setCloseNotifyReadTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTrustedX509Certificates",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseInsecureTrustManager",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCloseNotifyFlushTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseInsecureTrustManager",
        "parameterTypes": [ ]
      },
      {
        "name": "getHandshakeTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setCloseNotifyFlushTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getTrustedX509Certificates",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getCloseNotifyReadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "setHandshakeTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.support.ConfigurationService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.ReactiveAdapterRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.cors.CorsConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setExposedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getAllowedOrigins",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setAllowedOrigins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAllowedHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getExposedHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedOriginPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedOriginPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getAllowCredentials",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxInMemorySize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxInMemorySize",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.ForwardPathFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SetResponseHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForBigDecimal",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Integer"
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.MethodRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.configuration.SleuthPresentVerifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "setListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "getEnvironmentPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalProfiles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMainApplicationClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAllSources",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "getWebApplicationType",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      },
      {
        "name": "setBanner",
        "parameterTypes": [
          "org.springframework.boot.Banner"
        ]
      },
      {
        "name": "setApplicationStartup",
        "parameterTypes": [
          "org.springframework.core.metrics.ApplicationStartup"
        ]
      },
      {
        "name": "setBeanNameGenerator",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanNameGenerator"
        ]
      },
      {
        "name": "setAddCommandLineProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getInitializers",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnvironmentPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSources",
        "parameterTypes": [ ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAdditionalProfiles",
        "parameterTypes": [ ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "getMainApplicationClass",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setAddConversionService",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getApplicationStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHeadless",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getListeners",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationContextFactory",
        "parameterTypes": [
          "org.springframework.boot.ApplicationContextFactory"
        ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.AfterRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.example.client.CustomerClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "byName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "all",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": [ ]
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.HeaderRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SetRequestHostHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.HeaderRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.CookieRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.server.reactive.HttpHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientSslConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.rewrite.ModifyRequestBodyGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.server.session.WebSessionManager",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.NettyRoutingFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegistered",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setHeadersCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getHeadersCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxDiskUsagePerPart",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxParts",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInMemorySize",
        "parameterTypes": [ ]
      },
      {
        "name": "setFileStorageDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxHeadersSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxParts",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxHeadersSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getFileStorageDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxDiskUsagePerPart",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxInMemorySize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RemoveResponseHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SetStatusGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getOriginalStatusHeaderName",
        "parameterTypes": [ ]
      },
      {
        "name": "setOriginalStatusHeaderName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
    "queriedMethods": [
      {
        "name": "resourceUrlProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "webHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "responseStatusExceptionHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "webFluxWebSocketHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "serverCodecConfigurer",
        "parameterTypes": [ ]
      },
      {
        "name": "serverResponseResultHandler",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "viewResolutionResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "responseEntityResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "simpleHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "webFluxContentTypeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "webFluxAdapterRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "responseBodyResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Schema",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getIntrospection",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrinter",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileExtensions",
        "parameterTypes": [ ]
      },
      {
        "name": "setFileExtensions",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.route.RouteLocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RequestHeaderToRequestUriGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForShort",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.codec.ServerCodecConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.support.KeyValueConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.RsaProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSalt",
        "parameterTypes": [ ]
      },
      {
        "name": "isStrong",
        "parameterTypes": [ ]
      },
      {
        "name": "getAlgorithm",
        "parameterTypes": [ ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStrong",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAlgorithm",
        "parameterTypes": [
          "org.springframework.security.rsa.crypto.RsaAlgorithm"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "discoveryLocatorProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setLeakDetection",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
        ]
      },
      {
        "name": "getLeakDetection",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      },
      {
        "name": "getBuild",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.support.WeightConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.PredicateDefinition",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getArgs",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalPropertySourcesToRetain",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalPropertySourcesToRetain",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.DiscoveryClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.QueryRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.ReadBodyRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.AfterRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.util.MimeType",
    "methods": [
      {
        "name": "getParameters",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.cors.CorsGatewayFilterApplicationListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.client.reactive.ReactorClientHttpConnector",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.support.MvcFoundOnClasspathFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.BeforeRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultPartHttpMessageReaderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "compositeDiscoveryClient",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.conditional.OnEnabledPredicate$DefaultValue",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.reactive.ReactorResourceFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayAutoConfiguration$NettyConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nettyWriteResponseFilter",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GatewayProperties"
        ]
      },
      {
        "name": "reactorNettyWebSocketClient",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties",
          "reactor.netty.http.client.HttpClient"
        ]
      },
      {
        "name": "reactorNettyRequestUpgradeStrategy",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties"
        ]
      },
      {
        "name": "gatewayHttpClientFactory",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "java.util.List",
          "org.springframework.cloud.gateway.config.HttpClientSslConfigurer"
        ]
      },
      {
        "name": "httpClientProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "routingFilter",
        "parameterTypes": [
          "reactor.netty.http.client.HttpClient",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.cloud.gateway.config.HttpClientProperties"
        ]
      },
      {
        "name": "httpClientSslConfigurer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.cloud.gateway.config.HttpClientProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.discovery.DiscoveryClientRouteDefinitionLocator$DelegatingServiceInstance",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration$NoLoadBalancerClientFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
        ]
      },
      {
        "name": "webSessionIdResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinSpare",
        "parameterTypes": [ ]
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.graphql.ExecutionGraphQlService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nettyReactiveWebServerFactory",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "refreshScope",
        "parameterTypes": [ ]
      },
      {
        "name": "refreshEventListener",
        "parameterTypes": [
          "org.springframework.cloud.context.refresh.ContextRefresher"
        ]
      },
      {
        "name": "configDataContextRefresher",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext",
          "org.springframework.cloud.context.scope.refresh.RefreshScope",
          "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"
        ]
      },
      {
        "name": "loggingRebinder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RequestHeaderSizeGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.graphql.server.webflux.GraphQlHttpHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SecureHeadersGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMin",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "getSelectors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.socket.server.WebSocketService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": [ ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.RouterFunction",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.graphql.data.method.annotation.support.AnnotatedControllerConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getDataLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RequestHeaderSizeGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.CacheRequestBodyGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.configuration.SpringBootVersionVerifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixed",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SetPathGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.restart.RestartListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.XForwardedRemoteAddrRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactiveWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RemoveRequestHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesBeans",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesRebinder",
        "parameterTypes": [
          "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "isIncludeException",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RequestSizeGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.RemoteAddrRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setProxy",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties$Proxy"
        ]
      },
      {
        "name": "getWebsocket",
        "parameterTypes": [ ]
      },
      {
        "name": "setWebsocket",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties$Websocket"
        ]
      },
      {
        "name": "getProxy",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setPool",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties$Pool"
        ]
      },
      {
        "name": "setWiretap",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setResponseTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "isCompression",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getResponseTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties$Ssl"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "isWiretap",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.codec.CodecCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RewriteResponseHeaderGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.example.client.CustomerGraphqlController",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customers",
        "parameterTypes": [ ]
      },
      {
        "name": "profile",
        "parameterTypes": [
          "com.example.client.Customer"
        ]
      },
      {
        "name": "customerByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.example.client.CustomerClient"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.rewrite.ModifyResponseBodyGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Map"
  },
  {
    "name": "org.springframework.web.reactive.HandlerMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isIncludeDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseServicesQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseServicesQuery",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeDescription",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "inetUtilsProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "inetUtils",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtilsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCompatibleBootVersions",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setCompatibleBootVersions",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$Websocket",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxFramePayloadLength",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxFramePayloadLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProxyPing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isProxyPing",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayNoLoadBalancerClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "noLoadBalancerClientFilter",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.FilterDefinition",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultsBindHandlerAdvisor",
        "parameterTypes": [
          "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasePath",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Flux",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getPrefetch",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RemoveJsonAttributesResponseBodyGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SetPathGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.logging.LoggingRebinder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSecret",
        "parameterTypes": [ ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClient$Builder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.graphql.execution.BatchLoaderRegistry",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory$NameConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.BootstrapRegistryInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.AdaptCachedBodyGlobalFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.support.StringToZonedDateTimeConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.XForwardedRemoteAddrRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "getCompression",
        "parameterTypes": [ ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getUndertow",
        "parameterTypes": [ ]
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "getJetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttp2",
        "parameterTypes": [ ]
      },
      {
        "name": "getTomcat",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxHttpHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getNetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getServerHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "getDomain",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getSameSite",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RequestSizeGatewayFilterFactory$RequestSizeConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtilsProperties",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "timeoutSeconds"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnoredInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultIpAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultHostname",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultHostname",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPreferredNetworks",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnoredInterfaces",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getTimeoutSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseOnlySiteLocalInterfaces",
        "parameterTypes": [ ]
      },
      {
        "name": "setPreferredNetworks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUseOnlySiteLocalInterfaces",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultIpAddress",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SetRequestHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.HttpMethod",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.HttpClientProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcquireTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcquireTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxLifeTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "isMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.HttpClientProperties$Pool$PoolType"
        ]
      },
      {
        "name": "getMaxIdleTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setEvictionInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getEvictionInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxLifeTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "setMetrics",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxIdleTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "toLocalDate",
        "parameterTypes": [ ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AbstractNameValueGatewayFilterFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "isError",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "getReasonPhrase",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.route.RouteDefinitionLocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.MapRequestHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RewritePathGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.headers.ForwardedHeadersFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getSalt",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
        ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFailOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isFailOnError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.example.client.ClientApplication",
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "readyEventApplicationListener",
        "parameterTypes": [
          "com.example.client.CustomerClient"
        ]
      },
      {
        "name": "gateway",
        "parameterTypes": [
          "org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"
        ]
      },
      {
        "name": "customerClient",
        "parameterTypes": [
          "org.springframework.web.reactive.function.client.WebClient$Builder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.TaskExecutorBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webSessionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webFluxConversionService",
        "parameterTypes": [ ]
      },
      {
        "name": "webFluxValidator",
        "parameterTypes": [ ]
      },
      {
        "name": "localeContextResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.example.client.ClientApplication$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.example.client.ClientApplication$$SpringCGLIB$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.example.client.ClientApplication$$SpringCGLIB$$2",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "forceAutoProxyCreatorToUseClassProxying",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "getResources",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayLoadBalancerProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isUse404",
        "parameterTypes": [ ]
      },
      {
        "name": "setUse404",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocal",
        "parameterTypes": [ ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setInstances",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getInstances",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocket",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForFloat",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactory$RetryConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "loadBalancerClientsDefaultsMappingsProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SetRequestHostHeaderGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getNoTransform",
        "parameterTypes": [ ]
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "getNoCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePublic",
        "parameterTypes": [ ]
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": [ ]
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getNoStore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isAddMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getChain",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AddRequestHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDateTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.rewrite.ModifyResponseBodyGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getXssProtectionHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisable",
        "parameterTypes": [ ]
      },
      {
        "name": "setReferrerPolicy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getReferrerPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getDownloadOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setDisable",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPermittedCrossDomainPolicies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXssProtectionHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStrictTransportSecurity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPermittedCrossDomainPolicies",
        "parameterTypes": [ ]
      },
      {
        "name": "setFrameOptions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFrameOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrictTransportSecurity",
        "parameterTypes": [ ]
      },
      {
        "name": "setDownloadOptions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentTypeOptions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContentSecurityPolicy",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentTypeOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setContentSecurityPolicy",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SaveSessionGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "removeResponseHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "globalCorsProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "saveSessionGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "xForwardedHeadersFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "stringToZonedDateTimeConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "retryGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "pathRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "routePredicateHandlerMapping",
        "parameterTypes": [
          "org.springframework.cloud.gateway.handler.FilteringWebHandler",
          "org.springframework.cloud.gateway.route.RouteLocator",
          "org.springframework.cloud.gateway.config.GlobalCorsProperties",
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "gRPCResponseHeadersFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "keyValueConverter",
        "parameterTypes": [ ]
      },
      {
        "name": "betweenRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "transferEncodingNormalizationHeadersFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "setStatusGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "propertiesRouteDefinitionLocator",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GatewayProperties"
        ]
      },
      {
        "name": "addResponseHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "routeDefinitionLocator",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "readBodyPredicateFactory",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "addRequestHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "rewriteLocationResponseHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "addRequestParameterGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "gatewayConfigurationService",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setRequestHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "rewriteResponseHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "beforeRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "adaptCachedBodyGlobalFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "hostRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "xForwardedRemoteAddrRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "requestSizeGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "queryRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "routeDefinitionRouteLocator",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GatewayProperties",
          "java.util.List",
          "java.util.List",
          "org.springframework.cloud.gateway.route.RouteDefinitionLocator",
          "org.springframework.cloud.gateway.support.ConfigurationService"
        ]
      },
      {
        "name": "removeJsonAttributesResponseBodyGatewayFilterFactory",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer",
          "java.util.Set",
          "java.util.Set"
        ]
      },
      {
        "name": "corsGatewayFilterApplicationListener",
        "parameterTypes": [
          "org.springframework.cloud.gateway.config.GlobalCorsProperties",
          "org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping",
          "org.springframework.cloud.gateway.route.RouteLocator"
        ]
      },
      {
        "name": "methodRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "forwardPathFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "modifyResponseBodyGatewayFilterFactory",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer",
          "java.util.Set",
          "java.util.Set"
        ]
      },
      {
        "name": "setPathGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "forwardRoutingFilter",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "routeLocatorBuilder",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      },
      {
        "name": "stripPrefixGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "weightCalculatorWebFilter",
        "parameterTypes": [
          "org.springframework.cloud.gateway.support.ConfigurationService",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "requestHeaderSizeGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "webSocketService",
        "parameterTypes": [
          "org.springframework.web.reactive.socket.server.RequestUpgradeStrategy"
        ]
      },
      {
        "name": "prefixPathGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "cookieRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "gRPCRequestHeadersFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "requestHeaderToRequestUriGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "preserveHostHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "remoteAddrRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "cachedCompositeRouteLocator",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addRequestHeadersIfNotPresentGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "secureHeadersGatewayFilterFactory",
        "parameterTypes": [
          "org.springframework.cloud.gateway.filter.factory.SecureHeadersProperties"
        ]
      },
      {
        "name": "gzipMessageBodyResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "headerRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "removeHopByHopHeadersFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "removeRequestParameterGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "afterRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "dedupeResponseHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "filteringWebHandler",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "routeRefreshListener",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "routeToRequestUrlFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "removeCachedBodyFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "websocketRoutingFilter",
        "parameterTypes": [
          "org.springframework.web.reactive.socket.client.WebSocketClient",
          "org.springframework.web.reactive.socket.server.WebSocketService",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "setResponseHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "forwardedHeadersFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "mapRequestHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "modifyRequestBodyGatewayFilterFactory",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "removeRequestHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "cacheRequestBodyGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestHostHeaderGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "secureHeadersProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "cloudFoundryRouteServiceRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "weightRoutePredicateFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "rewritePathGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "inMemoryRouteDefinitionRepository",
        "parameterTypes": [ ]
      },
      {
        "name": "redirectToGatewayFilterFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "gatewayProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setDecodeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getDecodeSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.ProblemDetail",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setInstance",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getDetail",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForDouble",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": [ ]
      },
      {
        "name": "isBuffered",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isCheckExists",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMaxDays",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionIf",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.example.client.Customer",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "id",
        "parameterTypes": [ ]
      },
      {
        "name": "name",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.DedupeResponseHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setBufferRequestBody",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "httpHandler",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RedirectToGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.WeightRoutePredicateFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RewriteResponseHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.DedupeResponseHeaderGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientAuth",
        "parameterTypes": [ ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactiveCompositeDiscoveryClient",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "isCompressed",
        "parameterTypes": [ ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityNotMetFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "compositeCompatibilityVerifier",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "sleuthPresentVerifier",
        "parameterTypes": [ ]
      },
      {
        "name": "springBootVersionVerifier",
        "parameterTypes": [
          "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonCodecCustomizer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.BeforeRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GlobalCorsProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCorsConfigurations",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Schema$Printer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "simpleDiscoveryProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "simpleDiscoveryClient",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
        ]
      },
      {
        "name": "setInet",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtils"
        ]
      },
      {
        "name": "setServer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.RouteToRequestUrlFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.CookieRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RewriteLocationResponseHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "autoServiceRegistration"
      },
      {
        "name": "properties"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForLong",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.ForwardRoutingFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.socket.client.ReactorNettyWebSocketClient",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.endpoint.event.RefreshEventListener",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.FilteringWebHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "exchangeStrategiesCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AbstractChangeRequestUriGatewayFilterFactory",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Schema$Introspection",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.MaxDataSizeValidator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "reactor.core.publisher.Mono",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.PropertiesRouteDefinitionLocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RewritePathGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RetryGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.MapRequestHeaderGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy",
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RemoveRequestParameterGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.discovery.DiscoveryLocatorProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeExpression",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLowerCaseServiceId",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getFilters",
        "parameterTypes": [ ]
      },
      {
        "name": "getPredicates",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeExpression",
        "parameterTypes": [ ]
      },
      {
        "name": "setPredicates",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getRouteIdPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setRouteIdPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrlExpression",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isLowerCaseServiceId",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getUrlExpression",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ListableBeanFactory"
        ]
      },
      {
        "name": "executionGraphQlService",
        "parameterTypes": [
          "org.springframework.graphql.execution.GraphQlSource",
          "org.springframework.graphql.execution.BatchLoaderRegistry"
        ]
      },
      {
        "name": "batchLoaderRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "annotatedControllerConfigurer",
        "parameterTypes": [ ]
      },
      {
        "name": "graphQlSource",
        "parameterTypes": [
          "org.springframework.core.io.support.ResourcePatternResolver",
          "org.springframework.boot.autoconfigure.graphql.GraphQlProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "serviceId"
      },
      {
        "name": "inet"
      },
      {
        "name": "server"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "simpleReactiveDiscoveryProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "simpleReactiveDiscoveryClient",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.PreserveHostHeaderGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsp",
        "parameterTypes": [ ]
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getContextParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.PrefixPathGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.PrefixPathGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.headers.RemoveHopByHopHeadersFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setHeaders",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.RewriteLocationResponseHeaderGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPortHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "getHostHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": [ ]
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "environmentManager",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isForceResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isForceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "isForce",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AddRequestParameterGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getComment",
        "parameterTypes": [ ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getParser",
        "parameterTypes": [ ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "getSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeZone",
        "parameterTypes": [ ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [ ]
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": [ ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.context.refresh.ConfigDataContextRefresher",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.reactive.GraphQlWebFluxAutoConfiguration$GraphQlEndpointCorsConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.graphql.GraphQlProperties",
          "org.springframework.boot.autoconfigure.graphql.GraphQlCorsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.config.conditional.OnEnabledFilter$DefaultValue",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SetStatusGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForNumber",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.HostRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Graphiql",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.SecureHeadersGatewayFilterFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.StripPrefixGatewayFilterFactory",
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true,
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.server.session.WebSessionIdResolver",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setShutdownQuietPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getShutdownQuietPeriod",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.factory.AddRequestHeadersIfNotPresentGatewayFilterFactory$KeyValueConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "welcomePageRouterFunctionMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.NettyWriteResponseFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.config.GatewayProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setRoutes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFailOnRouteDefinitionError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRoutes",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultFilters",
        "parameterTypes": [ ]
      },
      {
        "name": "isFailOnRouteDefinitionError",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStreamingMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getStreamingMediaTypes",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForInteger",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.web.reactive.resource.ResourceUrlProvider",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isForAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "setHostAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isPortAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "setPortAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHostEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isPortEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPrefixAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isForEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isHostAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "isProtoEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isProtoAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefixEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPortEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isPrefixEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isPrefixAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtoAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isHostEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtoEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.headers.GRPCRequestHeadersFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.reactive.GraphQlWebFluxAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "graphQlRouterFunction",
        "parameterTypes": [
          "org.springframework.graphql.server.webflux.GraphQlHttpHandler",
          "org.springframework.graphql.execution.GraphQlSource",
          "org.springframework.boot.autoconfigure.graphql.GraphQlProperties"
        ]
      },
      {
        "name": "graphQlHttpHandler",
        "parameterTypes": [
          "org.springframework.graphql.server.WebGraphQlHandler"
        ]
      },
      {
        "name": "webGraphQlHandler",
        "parameterTypes": [
          "org.springframework.graphql.ExecutionGraphQlService",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.graphql.server.WebGraphQlHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.example.client.Profile",
    "allDeclaredConstructors": true,
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "id",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.filter.WebsocketRoutingFilter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.gateway.route.RouteDefinition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilters",
        "parameterTypes": [ ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetadata",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "getUri",
        "parameterTypes": [ ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "getMetadata",
        "parameterTypes": [ ]
      },
      {
        "name": "setPredicates",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getPredicates",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.discovery.GatewayDiscoveryClientAutoConfiguration$ReactiveDiscoveryClientRouteDefinitionLocatorConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties$Websocket",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConnectionInitTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionInitTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.gateway.route.InMemoryRouteDefinitionRepository",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactorClientHttpConnector",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "isPersistent",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": [ ]
      },
      {
        "name": "getStoreDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.net.URI"
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.graphql.GraphQlProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRsocket",
        "parameterTypes": [ ]
      },
      {
        "name": "getGraphiql",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebsocket",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setInstances",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.gateway.handler.predicate.BetweenRoutePredicateFactory$Config",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  }
]
